(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{118:function(e,t,r){"use strict";r.d(t,"a",(function(){return p})),r.d(t,"b",(function(){return m}));var n=r(0),o=r.n(n);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var u=o.a.createContext({}),s=function(e){var t=o.a.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},p=function(e){var t=s(e.components);return o.a.createElement(u.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},d=o.a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,a=e.originalType,i=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),p=s(r),d=n,m=p["".concat(i,".").concat(d)]||p[d]||b[d]||a;return r?o.a.createElement(m,l(l({ref:t},u),{},{components:r})):o.a.createElement(m,l({ref:t},u))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=r.length,i=new Array(a);i[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:n,i[1]=l;for(var u=2;u<a;u++)i[u]=r[u];return o.a.createElement.apply(null,i)}return o.a.createElement.apply(null,r)}d.displayName="MDXCreateElement"},95:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return i})),r.d(t,"metadata",(function(){return l})),r.d(t,"toc",(function(){return c})),r.d(t,"default",(function(){return s}));var n=r(3),o=r(7),a=(r(0),r(118)),i={title:"Introduction",sidebar_label:"Introduction"},l={unversionedId:"locationapp/intro",id:"locationapp/intro",isDocsHomePage:!1,title:"Introduction",description:"Objectives",source:"@site/docs\\locationapp\\intro.mdx",slug:"/locationapp/intro",permalink:"/docs/locationapp/intro",version:"current",sidebar_label:"Introduction",sidebar:"docs",previous:{title:"Instructions - Exploring Browser-side APIs",permalink:"/docs/browserapi/main"},next:{title:"Deploying a React App",permalink:"/docs/herokudeployment/react"}},c=[{value:"Objectives",id:"objectives",children:[]}],u={toc:c};function s(e){var t=e.components,r=Object(o.a)(e,["components"]);return Object(a.b)("wrapper",Object(n.a)({},u,r,{components:t,mdxType:"MDXLayout"}),Object(a.b)("h2",{id:"objectives"},"Objectives"),Object(a.b)("p",null,"We want to build a location-sharing application, that allows users to create and join rooms where they can share their live locations. For this, we need the following behaviour:"),Object(a.b)("p",null,"when a user enters the application:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"user is able to enter their display nickname"),Object(a.b)("li",{parentName:"ul"},"user is able to enter the ID of the room they want to join"),Object(a.b)("li",{parentName:"ul"},"user is able to choose to either create a new room, or join an existing online")),Object(a.b)("p",null,"when a user creates a room:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"user is added to the room"),Object(a.b)("li",{parentName:"ul"},"user is given the details of the room (room ID, number of active users)")),Object(a.b)("p",null,"when a user joins a room:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"user is added to the room"),Object(a.b)("li",{parentName:"ul"},"user is given the details of the room (room ID, number of active users)"),Object(a.b)("li",{parentName:"ul"},"all other users in the room receive the details of the newly arrived user (id for internal app use, display name, current location)")),Object(a.b)("p",null,"when a user updates their location"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"all other users in the room receive the details of the user with updates(id for internal app use, display name, current location)")),Object(a.b)("p",null,"when a user leaves the room:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"all other users in the room receive the details of the leaving user (id for internal app use, display name, current location)")),Object(a.b)("p",null,"when in a room, all users are able to see each others locations, displayed on a map."),Object(a.b)("p",null,"For reference:"),Object(a.b)("p",null,"The completed code can be found ",Object(a.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/realtime-apps-iap/location-sharing-app"}),"here")))}s.isMDXComponent=!0}}]);