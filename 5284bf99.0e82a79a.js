(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{119:function(e,t,a){"use strict";a.d(t,"a",(function(){return p})),a.d(t,"b",(function(){return m}));var n=a(0),r=a.n(n);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function c(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=r.a.createContext({}),b=function(e){var t=r.a.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):c(c({},t),e)),a},p=function(e){var t=b(e.components);return r.a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},d=r.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,o=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),p=b(a),d=n,m=p["".concat(o,".").concat(d)]||p[d]||u[d]||i;return a?r.a.createElement(m,c(c({ref:t},s),{},{components:a})):r.a.createElement(m,c({ref:t},s))}));function m(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,o=new Array(i);o[0]=d;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:n,o[1]=c;for(var s=2;s<i;s++)o[s]=a[s];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,a)}d.displayName="MDXCreateElement"},88:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return o})),a.d(t,"metadata",(function(){return c})),a.d(t,"toc",(function(){return l})),a.d(t,"default",(function(){return b}));var n=a(3),r=a(7),i=(a(0),a(119)),o={title:"JavaScript Primer / Refresher"},c={unversionedId:"introduction/jsprimer",id:"introduction/jsprimer",isDocsHomePage:!1,title:"JavaScript Primer / Refresher",description:"Introduction and Brief History",source:"@site/docs\\introduction\\jsprimer.mdx",slug:"/introduction/jsprimer",permalink:"/docs/introduction/jsprimer",version:"current",sidebar:"docs",previous:{title:"Getting Started",permalink:"/docs/"},next:{title:"Event-Driven Programming",permalink:"/docs/introduction/eventdrivenprogramming"}},l=[{value:"Introduction and Brief History",id:"introduction-and-brief-history",children:[]},{value:"JavaScript as a programming language",id:"javascript-as-a-programming-language",children:[]},{value:"Client-Side JavaScript vs. Node.js",id:"client-side-javascript-vs-nodejs",children:[]},{value:"Selected JavaScript Concepts",id:"selected-javascript-concepts",children:[]}],s={toc:l};function b(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(n.a)({},s,a,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h3",{id:"introduction-and-brief-history"},"Introduction and Brief History"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"JavaScript was created in 10 days in September 1995 by Netscape engineer Brendan Eich."),Object(i.b)("li",{parentName:"ul"},"Designed as scripting language for web browsers, but evolved way past it's original scope. (JavaScript everywhere - ",Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"https://cylonjs.com/documentation/platforms/arduino/"}),"even Arduino"),".)"),Object(i.b)("li",{parentName:"ul"},"The most popular language for projects on GitHub since 2014 (",Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"https://octoverse.github.com/"}),"source"),")"),Object(i.b)("li",{parentName:"ul"},"Has nothing to do with Java, the name was for ... marketing reasons. ")),Object(i.b)("p",null,"More Details: ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://www.youtube.com/watch?v=Sh6lK57Cuk4"}),"The Weird History of JavaScript")),Object(i.b)("h3",{id:"javascript-as-a-programming-language"},"JavaScript as a programming language"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"(Very) weakly typed - you don't have to specify the types of variables in declarations or function parameters or function return values. "),Object(i.b)("li",{parentName:"ul"},"Interpreted - JavaScript programs execute instructions directly, without compilation."),Object(i.b)("li",{parentName:"ul"},"Object Oriented - but not the way you might be used to it. While you can declare classes and such, object properties and methods can still be modified and new ones added. ",Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Inheritance_and_the_prototype_chain"}),"Prototypical Inheritance"))),Object(i.b)("p",null,"More Details: ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://www.youtube.com/watch?v=FSs_JYwnAdI"}),"fireship.io - JavaScript: How it's Made")),Object(i.b)("h3",{id:"client-side-javascript-vs-nodejs"},"Client-Side JavaScript vs. Node.js"),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Similarities")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"JavaScript is executed on a JavaScript engine, which is a program that translates the JavaScript program into machine instructions. It effectively acts as the interpreter, but also has extra functionality like just-in-time compilation for improved performance.",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"Examples of JavaScript Engines - V8 (used in Chromium Browsers and node.js), SpiderMonkey (used in Firefox)")))),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Differences")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Global Object"),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"Client-side JavaScript - The ",Object(i.b)("inlineCode",{parentName:"li"},"window")," object is the Global Object in the Browser. Any Global Variables or Functions can be accessed as ",Object(i.b)("em",{parentName:"li"},"properties")," of the ",Object(i.b)("inlineCode",{parentName:"li"},"window")," object. You use ",Object(i.b)("inlineCode",{parentName:"li"},"window")," to access the various web browser APIs, such as the DOM, but also many other things! (More to come in section about Progressive Web Applications)"),Object(i.b)("li",{parentName:"ul"},"Node.js - The global object is ",Object(i.b)("inlineCode",{parentName:"li"},"global"),". Big surprise. To access the various APIs provided by Node.js (such as accessing the filesystem, making HTTP requests), we access the built-in packages using the ",Object(i.b)("inlineCode",{parentName:"li"},"require")," function."))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Importing external dependencies:"),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"Client-Side JavaScript - import external dependencies into the global scope by including the appropriate ",Object(i.b)("inlineCode",{parentName:"li"},"<script>")," tags in the HTML file. Easy peasy."),Object(i.b)("li",{parentName:"ul"},"Node.js - like the built-in packages, we also use the ",Object(i.b)("inlineCode",{parentName:"li"},"require"),' function to import external modules. (if you\'ve built front-end web applications with a JavaScript framework like react.js, you are effectively writing a node.js program, which then gets "compiled" down to vanilla HTML, CSS and JavaScript before it is served). ')))),Object(i.b)("h3",{id:"selected-javascript-concepts"},"Selected JavaScript Concepts"),Object(i.b)("h4",{id:"nodejs-modules--npm--yarn"},"node.js modules / npm / yarn"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"node.js projects are organized into a directory, called a ",Object(i.b)("em",{parentName:"li"},"package"),"."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},".js")," files in a package are known as ",Object(i.b)("em",{parentName:"li"},"modules"),". each module has its own context, and cannot interfere with other modules or pollute the scope of the global object."),Object(i.b)("li",{parentName:"ul"},"a module can define which functions / objects within its scope are exported (and therefore can be imported by other modules) by modifying the ",Object(i.b)("inlineCode",{parentName:"li"},"module.exports")," object."),Object(i.b)("li",{parentName:"ul"},"a module can import external dependencies / other modules within the package using the ",Object(i.b)("inlineCode",{parentName:"li"},"require")," function. if a single keyword is passed to ",Object(i.b)("inlineCode",{parentName:"li"},"require")," (e.g ",Object(i.b)("inlineCode",{parentName:"li"},'"fs"')," or ",Object(i.b)("inlineCode",{parentName:"li"},'"express"'),"), node.js searches for the required module in the ",Object(i.b)("inlineCode",{parentName:"li"},"node_modules")," folder in the root of the package if it is not a built-in package (like ",Object(i.b)("inlineCode",{parentName:"li"},'"fs"')," or ",Object(i.b)("inlineCode",{parentName:"li"},'"http"'),")."),Object(i.b)("li",{parentName:"ul"},"external modules are hosted on ",Object(i.b)("inlineCode",{parentName:"li"},"npm")," (node package manager). We install modules (and update the ",Object(i.b)("inlineCode",{parentName:"li"},"package.json")," file, which describes the package and its dependencies) using a command-line package manager, like ",Object(i.b)("inlineCode",{parentName:"li"},"npm")," (usually installed with node.js) or ",Object(i.b)("inlineCode",{parentName:"li"},"yarn"))),Object(i.b)("h4",{id:"var--let--const"},"var / let / const"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"var"),", ",Object(i.b)("inlineCode",{parentName:"li"},"let")," and ",Object(i.b)("inlineCode",{parentName:"li"},"const")," are three keywords that you can use to declare variables. ",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"var")," is the oldest method of declaring a variable (and the only way to do so before the ES6 specification)"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"let")," also lets you declare a variable, but has a few key differences from var (among others)",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"let")," is block scoped (a block is a series of statements bounded by curly braces ",Object(i.b)("inlineCode",{parentName:"li"},"{}"),")"))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"const")," lets you declare a variable, but you will not be able to re-assign the variable (but if the variable is an object, properties of the object can still be updated)")))),Object(i.b)("h4",{id:"arrow-functions"},"Arrow Functions"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Arrow Functions are a compact alternative to a typical function expression. ",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"Instead of ",Object(i.b)("inlineCode",{parentName:"li"},"const square = function(a) {return a * a}")," we can write ",Object(i.b)("inlineCode",{parentName:"li"},"const square = (a) => a*a"))))),Object(i.b)("p",null,"More details: ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions"}),"MDN - Arrow Functions")),Object(i.b)("h4",{id:"promises-and-async--await"},"Promises and Async / Await"),Object(i.b)("p",null,"More details: "),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"https://www.youtube.com/watch?v=RvYYCGs45L4"}),"fireship.io - JavaScript Promise in 100 Seconds")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise"}),"MDN - Promises")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function"}),"MDN - async await"))),Object(i.b)("h4",{id:"extra-advanced-content-the-javascript-event-loop"},"Extra Advanced Content: The JavaScript Event Loop"),Object(i.b)("p",null,"There is far too much to explain here, and I don't think I can do the topics justice explaining all of them, but understanding the JavaScript event loop will really help you understand how concurrency and features such as promises, async/await and setTimeout work."),Object(i.b)("p",null,"More details:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/EventLoop"}),"MDN - Concurrency model and the event loop")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"https://www.youtube.com/watch?v=cCOL7MC4Pl0"}),"Jake Archibald: In The Loop - JSConf.Asia")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"https://github.com/yangshun/front-end-interview-handbook"}),"Frontend Interview Handbook")," - For even more advanced JS concepts")))}b.isMDXComponent=!0}}]);